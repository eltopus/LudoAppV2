{"version":3,"sources":["node_modules/browser-pack/_prelude.js","source/entities/Piece.ts","source/enums/ColorType.ts","source/main.ts","source/states/Game.ts","source/states/Preloader.ts"],"names":["f","exports","module","define","amd","g","window","global","self","this","ludo","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","Piece","_super","game","x","y","imageId","pieceId","color","_this","defaultX","defaultY","physics","enable","Phaser","Physics","ARCADE","frame","group","add","__extends","Sprite","ColorType","Preloader_1","Game_1","LudoGame","AUTO","state","Preloader","Game","start","onload","Piece_1","ColorType_1","prototype","create","sprite","redPiece","Red","State","preload","load","spritesheet","image","startGame"],"mappings":"CAAA,SAAAA,GAAA,GAAA,gBAAAC,UAAA,mBAAAC,QAAAA,OAAAD,QAAAD,QAAA,IAAA,kBAAAG,SAAAA,OAAAC,IAAAD,UAAAH,OAAA,CAAA,GAAAK,EAAAA,GAAA,mBAAAC,QAAAA,OAAA,mBAAAC,QAAAA,OAAA,mBAAAC,MAAAA,KAAAC,KAAAJ,EAAAK,KAAAV,MAAA,WAAA,MAAA,SAAAW,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAhB,GAAA,GAAAqB,OAAA,uBAAAL,EAAA,IAAA,MAAAhB,GAAAsB,KAAA,mBAAAtB,EAAA,GAAAuB,GAAAV,EAAAG,IAAAf,WAAAW,GAAAI,GAAA,GAAAQ,KAAAD,EAAAtB,QAAA,SAAAU,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,GAAAF,IAAAY,EAAAA,EAAAtB,QAAAU,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAf,QAAA,IAAA,GAAAmB,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAW,OAAAT,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAW,GAAA,SAAAP,EAAAjB,EAAAD,uYCIA,IAAA0B,GAAA,SAAAC,GAOI,QAAAD,GAAYE,EAAmBC,EAAWC,EAAWC,EAAiBC,EAAiBC,GAAvF,GAAAC,GACIP,EAAAJ,KAAAf,KAAMoB,EAAMC,EAAGC,EAAGC,IAAQvB,WAC1B0B,GAAKD,MAAQA,EACbC,EAAKC,SAAWN,EAChBK,EAAKE,SAAWN,EAChBI,EAAKN,KAAKS,QAAQC,OAAOJ,EAAMK,OAAOC,QAAQC,QAC9CP,EAAKQ,MAAQ,EACbR,EAAKS,MAAQT,EAAKN,KAAKgB,IAAID,QAC3BT,EAAKS,MAAMC,IAAIV,KAIvB,MAnB2BW,GAAAnB,EAAAC,GAmB3BD,GAnB2Ba,OAAOO,OAArB9C,GAAA0B,MAAAA,yFCHb,SAAYqB,GAAYA,EAAAA,EAAA,IAAA,GAAA,MAAKA,EAAAA,EAAA,KAAA,GAAA,OAAMA,EAAAA,EAAA,MAAA,GAAA,QAAOA,EAAAA,EAAA,OAAA,GAAA,UAA9B/C,EAAA+C,YAAA/C,EAAA+C,2aCAZ,IAAAC,GAAA9B,EAAA,sBACA+B,EAAA/B,EAAA,iBAEAgC,EAAA,SAAAvB,GACI,QAAAuB,KAAA,GAAAhB,GACIP,EAAAJ,KAAAf,KAAM,IAAK,IAAK+B,OAAOY,KAAM,kBAAgB3C,WAC7C0B,GAAKkB,MAAMR,IAAI,YAAaI,EAAAK,WAAW,GACvCnB,EAAKkB,MAAMR,IAAI,OAAQK,EAAAK,MAAM,GAC7BpB,EAAKkB,MAAMG,MAAM,eAEzB,MAP8BV,GAAAK,EAAAvB,GAO9BuB,GAP8BX,OAAOe,KAAxBtD,GAAAkD,SAAAA,EASb7C,OAAOmD,OAAS,WACD,GAAIN,wcCbnB,IAAAO,GAAAvC,EAAA,qBACAwC,EAAAxC,EAAA,sBAEAoC,EAAA,SAAA3B,GAAA,QAAA2B,oDAOA,MAP0BT,GAAAS,EAAA3B,GAGf2B,EAAAK,UAAAC,OAAP,WACIpD,KAAKoC,IAAIiB,OAAO,EAAG,EAAG,SACtBrD,KAAKsD,SAAW,GAAIL,GAAA/B,MAAMlB,KAAKoB,KAAM,IAAK,IAAK,YAAa,YAAa8B,EAAAX,UAAUgB,MAE3FT,GAP0Bf,OAAOyB,MAApBhE,GAAAsD,KAAAA,0cCFb,IAAAD,GAAA,SAAA1B,GAAA,QAAA0B,oDAkBA,MAlB+BR,GAAAQ,EAAA1B,GAEpB0B,EAAAM,UAAAM,QAAP,WACIzD,KAAK0D,KAAKC,YAAY,YAAa,iBAAkB,GAAI,GAAI,GAC7D3D,KAAK0D,KAAKC,YAAY,aAAc,kBAAmB,GAAI,GAAI,GAC/D3D,KAAK0D,KAAKC,YAAY,cAAe,mBAAoB,GAAI,GAAI,GACjE3D,KAAK0D,KAAKC,YAAY,eAAgB,oBAAqB,GAAI,GAAI,GACnE3D,KAAK0D,KAAKE,MAAM,QAAS,qBAGtBf,EAAAM,UAAAC,OAAP,WACIpD,KAAK6D,aAGFhB,EAAAM,UAAAU,UAAP,WACI7D,KAAKoB,KAAKwB,MAAMG,MAAM,QAAQ,GAAM,IAG5CF,GAlB+Bd,OAAOyB,MAAzBhE,GAAAqD,UAAAA","file":"ludo.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/// <reference path = \"../../node_modules/phaser/typescript/phaser.d.ts\" />\r\nimport {PieceInterface} from \"../interfaces/PieceInterface\";\r\nimport {ColorType} from \"../enums/ColorType\";\r\n\r\nexport class Piece extends Phaser.Sprite implements PieceInterface{\r\n\r\n    public defaultX: number;\r\n    public defaultY: number;\r\n    public group: Phaser.Group;\r\n    public color: ColorType;\r\n\r\n    constructor(game: Phaser.Game, x: number, y: number, imageId: string, pieceId: string, color: ColorType){\r\n        super(game, x, y, imageId);\r\n        this.color = color;\r\n        this.defaultX = x;\r\n        this.defaultY = y;\r\n        this.game.physics.enable(this, Phaser.Physics.ARCADE);\r\n        this.frame = 0;\r\n        this.group = this.game.add.group();\r\n        this.group.add(this);\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","\r\nexport enum ColorType { Red, Blue, Green, Yellow }","/// <reference path = \"../node_modules/phaser/typescript/phaser.d.ts\" />\r\nimport {Preloader} from \"./states/Preloader\";\r\nimport {Game} from \"./states/Game\";\r\n\r\nexport class LudoGame extends Phaser.Game{\r\n    constructor() {\r\n        super(800, 600, Phaser.AUTO, \"gameContainer\");\r\n        this.state.add(\"Preloader\", Preloader, false);\r\n        this.state.add(\"Game\", Game, false);\r\n        this.state.start(\"Preloader\"); \r\n   }\r\n}\r\n\r\nwindow.onload = function() {\r\n    let game = new LudoGame();\r\n}","/// <reference path = \"../../node_modules/phaser/typescript/phaser.d.ts\" />\r\nimport {Piece} from \"../entities/Piece\";\r\nimport {ColorType} from \"../enums/ColorType\";\r\n\r\nexport class Game extends Phaser.State {\r\n\r\n    public redPiece: Piece;\r\n    public create() {\r\n        this.add.sprite(0, 0, \"board\");\r\n        this.redPiece = new Piece(this.game, 290, 120, \"red_piece\", \"xxxyyyzzz\", ColorType.Red);\r\n    }\r\n}","/// <reference path = \"../../node_modules/phaser/typescript/phaser.d.ts\" />\r\n\r\nexport class Preloader extends Phaser.State {\r\n\r\n    public preload() {\r\n        this.load.spritesheet(\"red_piece\", \"images/red.png\", 42, 42, 2);\r\n        this.load.spritesheet(\"blue_piece\", \"images/blue.png\", 42, 42, 2);\r\n        this.load.spritesheet(\"green_piece\", \"images/green.png\", 42, 42, 2);\r\n        this.load.spritesheet(\"yellow_piece\", \"images/yellow.png\", 42, 42, 2);\r\n        this.load.image(\"board\", \"images/board.jpg\");\r\n    }\r\n\r\n    public create() {\r\n        this.startGame();\r\n    }\r\n\r\n    public startGame() {\r\n        this.game.state.start(\"Game\", true, false);\r\n    }\r\n\r\n}"]}